@model Odin.ViewModels.Orders.Transferee.HousingPropertyViewModel

@using (Html.BeginForm("Create", 
                       "HomeFindingProperties",
                       new { ReturnUrl = ViewBag.ReturnUrl },
                       FormMethod.Post, new { id = "propertyForm", enctype = "multipart/form-data" }))
{
    <div class="modal-body">

        @Html.AntiForgeryToken()

        <div class="form-vertical container-fluid">
            <div class="row">
                <div class="col-md-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.OrderId)

                    <div class="row">
                        <div class="form-group col-md-12">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyStreet1, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyStreet1, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyStreet1, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-12">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyStreet2, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyStreet2, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyStreet2, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyCity, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyCity, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyCity, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyState, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyState, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyState, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyPostalCode, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyPostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyPostalCode, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyAvailabilityDate, "", new { @class = "text-danger" })
                                @Html.DatePicker("date", "PropertyAvailabilityDate", Model.PropertyAvailabilityDate)
                            </div>
                            @Html.LabelFor(model => model.PropertyAvailabilityDate, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyNumberOfBedrooms, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyNumberOfBedrooms, new { htmlAttributes = new { @class = "form-control", @min = "0", @step = "1", @type = "number" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyNumberOfBedrooms, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyNumberOfBathrooms, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyNumberOfBathrooms, new { htmlAttributes = new { @class = "form-control", @min = "0", @step = "0.5", @type = "number" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyNumberOfBathrooms, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-6">
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertySquareFootage, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertySquareFootage, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertySquareFootage, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="form-group col-md-6">
                            <div class="input-group">
                                <span class="input-group-addon">$</span>
                                @Html.ValidationMessageFor(model => model.PropertyAmount, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyAmount, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.LabelFor(model => model.PropertyAmount, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group col-md-12">
                            @Html.LabelFor(model => model.PropertyDescription, htmlAttributes: new { @class = "control-label" })
                            <div>
                                @Html.ValidationMessageFor(model => model.PropertyDescription, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PropertyDescription, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-md-12">
                            <div>
                                @Html.ValidationMessageFor(model => model.UploadedPhotos, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(model => model.UploadedPhotos, new { type = "file", multiple = "true", @class = "form-control", @accept = "image/*" })
                            </div>
                            @Html.LabelFor(model => model.UploadedPhotos, htmlAttributes: new { @class = "control-label" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div> @* close modal-body*@

    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="submit" class="btn btn-primary">Save</button>
    </div>

} @* Close Form *@

@Scripts.Render("~/Scripts/jquery.validate.js")
@Scripts.Render("~/Scripts/jquery.validate.unobtrusive.js")


