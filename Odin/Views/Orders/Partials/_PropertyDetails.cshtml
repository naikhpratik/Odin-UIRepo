@model Odin.ViewModels.Orders.Transferee.HousingPropertyViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h5 class="modal-title"><strong>Available on:</strong> @Html.DisplayFor(model => model.PropertyAvailabilityDate)</h5>
</div>
<div class="modal-body">
    <div class="container-fluid" data-property-id="@Model.Id">
        <div class="row">
            <div class="col-md-8">
                @Html.DisplayFor(p => p.PropertyPhotos)
            </div>

            <div class="col-md-4">
                <ul class="row sectionList">
                    <li class="col-md-12">
                        <label>@Html.DisplayNameFor(model => model.PropertyAddress)</label>
                        <p>@Html.DisplayFor(model => model.PropertyAddress)</p>
                    </li>

                    <li class="col-md-6">
                        <label>@Html.DisplayNameFor(model => model.PropertyNumberOfBedrooms)</label>
                        <p>@Html.DisplayFor(model => model.PropertyNumberOfBedrooms)</p>
                    </li>
                    <li class="col-md-6">
                        <label>@Html.DisplayNameFor(model => model.PropertyNumberOfBathrooms)</label>
                        <p>@Html.DisplayFor(model => model.PropertyNumberOfBathrooms)</p>
                    </li>

                    <li class="col-md-6">
                        <label>@Html.DisplayNameFor(model => model.PropertySquareFootage)</label>
                        <p>@Html.DisplayFor(model => model.PropertySquareFootage)</p>
                    </li>
                    <li class="col-md-6">
                        <label>@Html.DisplayNameFor(model => model.PropertyAmount)</label>
                        <p>@Html.DisplayFor(model => model.PropertyAmount)</p>
                    </li>
                    @if (Model.ViewingDate.HasValue)
                    { 
                    <li class="col-md-12">
                        <label>@Html.DisplayNameFor(model => model.ViewingDate)</label>
                        <p>@Html.DisplayFor(model => model.ViewingDate)</p>
                    </li>
                    }
                </ul>
                <div class="row controlsContainer">
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.Liked, new { propertyId = Model.Id })
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <ul class="row sectionList">
                    <li class="col-md-12">
                        <label>@Html.DisplayNameFor(model => model.PropertyDescription)</label>
                        @*<p>@Html.DisplayFor(model => model.PropertyDescription)</p>*@
                        @*<p>@Model.PropertyDescription.Replace("<br />","\n")</p>*@
                        <!--Should be safe because sanitized in view model.-->
                        <p>@Html.Raw(@Model.PropertyDescription)</p>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" id="removeProperty" class="btn btn-danger btn-ok">Remove Property</button>
</div>

<script>
    $(document).ready(function () {
        $("#removeProperty.btn-danger").click(function () {
            TransfereeHousingController.deleteProperty("@Model.Id");
        });
    });
</script>
