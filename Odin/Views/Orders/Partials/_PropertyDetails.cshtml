@model Odin.ViewModels.Orders.Transferee.HousingPropertyViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h5 class="modal-title"><strong>Available on:</strong> @Html.DisplayFor(model => model.PropertyAvailabilityDate)</h5>
</div>


<div class="modal-body" id="housingPropertyModalBody">
    <div class="container-fluid" data-property-id="@Model.Id">
        <div class="col-md-4 col-md-push-8 housingProperty-block">
            <ul class="sectionList">
                @if (Model.ViewingDate.HasValue)
                {
                    <li class="housingPropertyModal__ViewDate">
                        <label>@Html.DisplayNameFor(model => model.ViewingDate)</label>
                        <p>@Html.DisplayFor(model => model.ViewingDate)</p>
                    </li>
                }
                <li class="housingPropertyModal__propAddress">
                    <label>@Html.DisplayNameFor(model => model.PropertyAddress)</label>
                    <p>@Html.DisplayFor(model => model.PropertyAddress)</p>
                </li>

                <li class="housingPropertyModal__propBedrooms hpm_edit">
                    <label>@Html.DisplayNameFor(model => model.PropertyNumberOfBedrooms)</label>
                    <p class="prop-span">@Html.DisplayFor(model => model.PropertyNumberOfBedrooms)</p>
                    @Html.TextBoxFor(model => @Model.PropertyNumberOfBedrooms, new { @class = "form-control intake-input" })
                    @Html.HiddenFor(model => @Model.PropertyNumberOfBedrooms, new { @class = "housingDetails-hidden" })
                </li>
                <li class="housingPropertyModal__propBedrooms hpm_edit">
                    <label>@Html.DisplayNameFor(model => model.PropertyNumberOfBathrooms)</label>
                    <p class="prop-span">@Html.DisplayFor(model => model.PropertyNumberOfBathrooms)</p>
                    @Html.TextBoxFor(model => @Model.PropertyNumberOfBathrooms, new { @class = "form-control intake-input" })
                    @Html.HiddenFor(model => @Model.PropertyNumberOfBathrooms, new { @class = "housingDetails-hidden" })
                </li>

                <li class="housingPropertyModal__propSquarefootage hpm_edit">
                    <label>@Html.DisplayNameFor(model => model.PropertySquareFootage)</label>
                    <p class="prop-span">@Html.DisplayFor(model => model.PropertySquareFootage)</p>
                    @Html.TextBoxFor(model => @Model.PropertySquareFootage, new { @class = "form-control intake-input"})
                    @Html.HiddenFor(model => @Model.PropertySquareFootage, new { @class = "housingDetails-hidden" })
                </li>
                <li class="housingPropertyModal__propAmount hpm_edit">
                    <label>@Html.DisplayNameFor(model => model.PropertyAmount)</label>
                    <p class="prop-span">@Html.DisplayFor(model => model.PropertyAmount)</p>
                    @Html.TextBoxFor(model => @Model.PropertyAmount, new { @class = "form-control intake-input" })
                    @Html.HiddenFor(model => @Model.PropertyAmount, new { @class = "housingDetails-hidden" })
                </li>

            </ul>

            <button type="button" id="editProperty" class="btn btn-secondary housingPropertyModal__edit">EDIT</button>
            <div class="row housingPropertyModal__likeDislike">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Liked, new { propertyId = Model.Id })
                </div>
            </div>
            <div class="row housingPropertyModal__selectRemove">
                <button type="button" id="selectProperty" class="btn btn-success btn-lg housingPropertyModal__select">Select Property</button>
                <button type="button" id="removeProperty" class="btn housingPropertyModal__remove">Remove Property</button>
            </div>
        </div>
        <div class="col-md-8 col-md-pull-4">
            @if (Model.PropertyPhotos.Count() > 0)
            {
                @Html.DisplayFor(p => p.PropertyPhotos);
            }
            <div class="">
                <label>@Html.DisplayNameFor(model => model.PropertyDescription)</label>
                <p>@Html.Raw(@Model.PropertyDescription)</p>
            </div>

        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $("#removeProperty").click(function () {
                TransfereeHousingController.deleteProperty("@Model.Id");
            });
        $('#selectProperty').click(function () {
                TransfereeHousingController.selectProperty("@Model.Id");
        });
        $('.intake-input').css("display", "none");
        TransfereeSelectedPropertyController.init();
      });
</script>
